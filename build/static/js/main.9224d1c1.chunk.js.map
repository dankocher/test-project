{"version":3,"sources":["components/Header/logo.svg","components/Header/index.js","components/PageCard/index.js","components/PageCard/PageCard.js","components/Home/index.js","components/MenuItem/index.js","components/MenuItem/MenuItem.js","components/PageContainer/Menu/index.js","components/ArticlePage/index.js","components/ArticlePage/ArticlePage.js","components/PageContainer/Page/index.js","components/PageContainer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","onClick","this","props","src","logo","width","alt","React","Component","PageCard","title","style","height","Home","pages","selectPage","Math","sqrt","length","map","page","i","key","MenuItem","selected","titleStyle","Menu","currentPage","ArticlePage","text","mainStyle","textStyle","p","avgWordsPerSentence","avgSentencesPerParagraph","startWithLoremIpsum","Page","PageContainer","App","setPage","state","setState","localStorage","setItem","getItem","selectedPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9224d1c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0092e920.svg\";","import React from \"react\";\nimport './styles.scss';\nimport logo from './logo.svg';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n\n    render() {\n        return <header>\n            <div className=\"home-button\" onClick={this.props.onClick}>\n                <img src={logo} width={80} alt={\"Test project\"}/>\n                <span className={'title'}>Test Project</span>\n            </div>\n        </header>\n    }\n}\n\nHeader.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default Header;","import PageCard from './PageCard';\n\nexport default PageCard;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nexport default class PageCard extends Component{\n\n    static propTypes = {\n        title: PropTypes.string.isRequired,\n        style: PropTypes.object,\n        onClick: PropTypes.func,\n        className: PropTypes.string,\n        width: PropTypes.number,\n        height: PropTypes.number\n    };\n\n    onClick = () => {\n        const {onClick} = this.props;\n\n        if (onClick) {\n            onClick()\n        }\n    };\n\n    render() {\n        const {title, className, style, width, height} = this.props;\n\n        return (\n            <div className={`page-card${className ? ` ${className}` : ''}`} onClick={this.onClick} style={{width, height, ...style}}>\n                {title}\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './styles.scss';\nimport PropTypes from 'prop-types';\nimport PageCard from \"../PageCard\";\n\nconst PageCardSize = 200;\n\nclass Home extends React.Component {\n\n    render() {\n        const {pages, selectPage} = this.props;\n        return <div className={\"home\"}>\n            <div className=\"pages-card-container\" style={{width: Math.sqrt(pages.length) * PageCardSize}}>\n                {\n                    pages.map((page, i) => (\n                        <PageCard\n                            key={`page-${i}`}\n                            title={page}\n                            onClick={() => selectPage(page)}\n                            width={PageCardSize}\n                            height={PageCardSize}\n                        />\n                    ))\n                }\n            </div>\n        </div>\n    }\n}\n\nHome.propTypes = {\n    selectPage: PropTypes.func.isRequired,\n    pages: PropTypes.array.isRequired\n};\n\nexport default Home;","import MenuItem from './MenuItem';\n\nexport default MenuItem","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nexport default class MenuItem extends Component{\n\n    static propTypes = {\n        title: PropTypes.string.isRequired,\n        style: PropTypes.object,\n        titleStyle: PropTypes.object,\n        onClick: PropTypes.func,\n        className: PropTypes.string,\n        selected: PropTypes.bool,\n        width: PropTypes.number,\n        height: PropTypes.number\n    };\n\n    onClick = () => {\n        const {onClick} = this.props;\n\n        if (onClick) {\n            onClick()\n        }\n    };\n\n    render() {\n        const {title, className, style, width, height, selected, titleStyle} = this.props;\n\n\n        return (\n            <div className={`menu-item${selected ? ' -selected' : ''}${className ? ` ${className}` : ''}`} onClick={this.onClick} style={{width, height, ...style}}>\n                <span style={titleStyle}>{title}</span>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport './styles.scss';\nimport MenuItem from \"../../MenuItem\";\n\nclass Menu extends React.Component {\n\n    render() {\n        const {pages, selectPage, currentPage} = this.props;\n        return (\n            <div className={'menu'}>\n                {\n                    pages.map((page, i) => (\n                        <MenuItem key={`menu-item-${i}`} title={page}\n                                  onClick={() => selectPage(page)}\n                                  selected={page === currentPage}\n                                  height={40}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nMenu.propTypes = {\n    pages: PropTypes.array.isRequired,\n    currentPage: PropTypes.string.isRequired,\n    selectPage: PropTypes.func.isRequired\n};\n\nexport default Menu;","import ArticlePage from './ArticlePage';\n\nexport default ArticlePage;","import React, {Component} from 'react';\nimport './styles.scss';\nimport PropTypes from \"prop-types\";\nimport { LoremIpsum } from 'react-lorem-ipsum';\n\nexport default class ArticlePage extends Component{\n\n    static propTypes = {\n        title: PropTypes.string,\n        text: PropTypes.string,\n        className: PropTypes.string,\n        mainStyle: PropTypes.object,\n        titleStyle: PropTypes.object,\n        textStyle: PropTypes.object\n    };\n\n    render() {\n        const {className, text, title, mainStyle, titleStyle, textStyle} = this.props;\n\n        return (\n            <div className={`article-page${className ? ` ${className}` : ''}`} style={mainStyle}>\n                <div className='ap-title' style={titleStyle}>{title}</div>\n                <div className='ap-text' style={textStyle}>\n                    {\n                        text ||\n                        <LoremIpsum\n                            p={20}\n                            avgWordsPerSentence={10}\n                            avgSentencesPerParagraph={16}\n                            startWithLoremIpsum={false}\n                        />\n                    }\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './styles.scss';\nimport PropTypes from 'prop-types';\nimport ArticlePage from \"../../ArticlePage\";\n\nclass Page extends React.Component {\n\n    render() {\n        const {currentPage} = this.props;\n\n        return (\n            <div className={'page'}>\n                <ArticlePage title={currentPage} />\n            </div>\n        );\n    }\n}\n\nPage.propTypes = {\n    currentPage: PropTypes.string.isRequired\n};\n\nexport default Page;","import React from \"react\";\nimport './styles.scss';\nimport PropTypes from 'prop-types';\nimport Menu from \"./Menu\";\nimport Page from \"./Page\";\n\nclass PageContainer extends React.Component {\n\n    render() {\n        const {currentPage, pages, selectPage} = this.props;\n        return <div className={\"page-container\"}>\n            <div className=\"page-menu\">\n                <Menu pages={pages} currentPage={currentPage} selectPage={selectPage}/>\n            </div>\n            <Page currentPage={currentPage}/>\n        </div>\n    }\n}\n\nPageContainer.propTypes = {\n    currentPage: PropTypes.string.isRequired,\n    pages: PropTypes.array.isRequired,\n    selectPage: PropTypes.func.isRequired\n};\n\nexport default PageContainer;","import React from 'react';\nimport './App.scss';\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport PageContainer from \"./components/PageContainer\";\n\nconst PAGE_STORAGE_NAME = \"test-project-page\";\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    const currentPage = localStorage.getItem(PAGE_STORAGE_NAME);\n\n    this.state = {\n      currentPage: currentPage || \"home\",\n      // pages: [\"Page 1\", \"Page 2\", \"Page 3\", \"Page 4\"],\n      pages: [\"Page 1\", \"Page 2\", \"Page 3\", \"Page 4\", \"Page 5\", \"Page 6\", \"Page 7\", \"Page 8\", \"Page 9\"]\n    };\n  }\n\n  setPage = (currentPage) => {\n    if (currentPage === this.state.currentPage) return;\n    this.setState({currentPage});\n    localStorage.setItem(PAGE_STORAGE_NAME, currentPage);\n  };\n\n  render() {\n    const {pages, currentPage} = this.state;\n    return <div className=\"App\">\n      <div className=\"app-header\">\n        <Header selectedPage={currentPage} onClick={() => this.setPage('home')}/>\n      </div>\n\n      <div className=\"app-content\">\n        {\n          currentPage === \"home\" ?\n              <Home selectPage={page => this.setPage(page)} pages={pages}/>\n              :\n              <PageContainer pages={pages} currentPage={currentPage} selectPage={page => this.setPage(page)}/>\n        }\n      </div>\n    </div>\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}